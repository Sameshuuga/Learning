/* The playing stage for the BABYCANG video game */

class stage {
    function void stage() {
        do Screen.drawLine( 0, 255, 511, 255 ); // ground level
        do Screen.drawRectangle(0, 219, 481, 223); // level 1
        do Screen.drawRectangle(30, 183, 511, 187); // level 2
        do Screen.drawRectangle(0, 147, 481, 151); // level 3
        do Screen.drawRectangle(30, 111, 511, 115); // level 4
        do Screen.drawRectangle(0, 75, 481, 79); // level 5
        return;
    }
function void babycang0 (int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 224);
	do Memory.poke(memAddress +32, 96);
	do Memory.poke(memAddress +64, 96);
	do Memory.poke(memAddress +96, 32752);
	do Memory.poke(memAddress +128, -16360);
	do Memory.poke(memAddress +160, 24588);
	do Memory.poke(memAddress +192, 8646);
	do Memory.poke(memAddress +224, 4545);
	do Memory.poke(memAddress +256, 6145);
	do Memory.poke(memAddress +288, 6145);
	do Memory.poke(memAddress +320, 2049);
	do Memory.poke(memAddress +352, 2049);
	do Memory.poke(memAddress +384, -30719);
	do Memory.poke(memAddress +416, -1983);
	do Memory.poke(memAddress +448, -30655);
	do Memory.poke(memAddress +480, 7105);
	do Memory.poke(memAddress +512, 4993);
	do Memory.poke(memAddress +544, 12673);
	do Memory.poke(memAddress +576, 24577);
	do Memory.poke(memAddress +608, -32767);
	do Memory.poke(memAddress +640, 1);
	do Memory.poke(memAddress +672, 3);
	do Memory.poke(memAddress +704, -32762);
	do Memory.poke(memAddress +736, -4068);
	do Memory.poke(memAddress +768, 8176);
	do Memory.poke(memAddress +800, 2112);
	do Memory.poke(memAddress +832, 2112);
	do Memory.poke(memAddress +864, 14784);
	// column 1
	do Memory.poke(memAddress +353, 6);
	do Memory.poke(memAddress +385, 3);
	do Memory.poke(memAddress +449, 1);
	do Memory.poke(memAddress +481, 7);
	do Memory.poke(memAddress +609, 7);
	do Memory.poke(memAddress +641, 4);
	do Memory.poke(memAddress +673, 2);
	do Memory.poke(memAddress +705, 3);
	return;
}
function void babycang1(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, -8192);
	do Memory.poke(memAddress +32, 24576);
	do Memory.poke(memAddress +64, 24576);
	do Memory.poke(memAddress +96, -4096);
	do Memory.poke(memAddress +128, 6144);
	do Memory.poke(memAddress +160, 3072);
	do Memory.poke(memAddress +192, -14848);
	do Memory.poke(memAddress +224, -16128);
	do Memory.poke(memAddress +256, 256);
	do Memory.poke(memAddress +288, 256);
	do Memory.poke(memAddress +320, 256);
	do Memory.poke(memAddress +352, 256);
	do Memory.poke(memAddress +384, 256);
	do Memory.poke(memAddress +416, 16640);
	do Memory.poke(memAddress +448, 16640);
	do Memory.poke(memAddress +480, -16128);
	do Memory.poke(memAddress +512, -32512);
	do Memory.poke(memAddress +544, -32512);
	do Memory.poke(memAddress +576, 256);
	do Memory.poke(memAddress +608, 256);
	do Memory.poke(memAddress +640, 256);
	do Memory.poke(memAddress +672, 768);
	do Memory.poke(memAddress +704, 1536);
	do Memory.poke(memAddress +736, 7168);
	do Memory.poke(memAddress +768, -4096);
	do Memory.poke(memAddress +800, 16384);
	do Memory.poke(memAddress +832, 16384);
	do Memory.poke(memAddress +864, -16384);
	// column 1
	do Memory.poke(memAddress +97, 127);
	do Memory.poke(memAddress +129, 192);
	do Memory.poke(memAddress +161, 96);
	do Memory.poke(memAddress +193, 33);
	do Memory.poke(memAddress +225, 17);
	do Memory.poke(memAddress +257, 24);
	do Memory.poke(memAddress +289, 24);
	do Memory.poke(memAddress +321, 8);
	do Memory.poke(memAddress +353, 1544);
	do Memory.poke(memAddress +385, 904);
	do Memory.poke(memAddress +417, 248);
	do Memory.poke(memAddress +449, 392);
	do Memory.poke(memAddress +481, 1819);
	do Memory.poke(memAddress +513, 19);
	do Memory.poke(memAddress +545, 49);
	do Memory.poke(memAddress +577, 96);
	do Memory.poke(memAddress +609, 1920);
	do Memory.poke(memAddress +641, 1024);
	do Memory.poke(memAddress +673, 512);
	do Memory.poke(memAddress +705, 896);
	do Memory.poke(memAddress +737, 240);
	do Memory.poke(memAddress +769, 31);
	do Memory.poke(memAddress +801, 8);
	do Memory.poke(memAddress +833, 8);
	do Memory.poke(memAddress +865, 57);
	return;
}
function void babycang2(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	// column 1
	do Memory.poke(memAddress +1, 896);
	do Memory.poke(memAddress +33, 384);
	do Memory.poke(memAddress +65, 384);
	do Memory.poke(memAddress +97, -64);
	do Memory.poke(memAddress +129, 96);
	do Memory.poke(memAddress +161, -32720);
	do Memory.poke(memAddress +193, -30952);
	do Memory.poke(memAddress +225, 18180);
	do Memory.poke(memAddress +257, 24580);
	do Memory.poke(memAddress +289, 24580);
	do Memory.poke(memAddress +321, 8196);
	do Memory.poke(memAddress +353, 8196);
	do Memory.poke(memAddress +385, 8196);
	do Memory.poke(memAddress +417, -7932);
	do Memory.poke(memAddress +449, 8452);
	do Memory.poke(memAddress +481, 28420);
	do Memory.poke(memAddress +513, 19972);
	do Memory.poke(memAddress +545, -14844);
	do Memory.poke(memAddress +577, -32764);
	do Memory.poke(memAddress +609, 4);
	do Memory.poke(memAddress +641, 4);
	do Memory.poke(memAddress +673, 12);
	do Memory.poke(memAddress +705, 24);
	do Memory.poke(memAddress +737, -16272);
	do Memory.poke(memAddress +769, 32704);
	do Memory.poke(memAddress +801, 8448);
	do Memory.poke(memAddress +833, 8448);
	do Memory.poke(memAddress +865, -6400);
	// column 2
	do Memory.poke(memAddress +98, 1);
	do Memory.poke(memAddress +130, 3);
	do Memory.poke(memAddress +162, 1);
	do Memory.poke(memAddress +354, 24);
	do Memory.poke(memAddress +386, 14);
	do Memory.poke(memAddress +418, 3);
	do Memory.poke(memAddress +450, 6);
	do Memory.poke(memAddress +482, 28);
	do Memory.poke(memAddress +578, 1);
	do Memory.poke(memAddress +610, 30);
	do Memory.poke(memAddress +642, 16);
	do Memory.poke(memAddress +674, 8);
	do Memory.poke(memAddress +706, 14);
	do Memory.poke(memAddress +738, 3);
	return;
}
function void babycang3(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 14336);
	do Memory.poke(memAddress +32, 12288);
	do Memory.poke(memAddress +64, 12288);
	do Memory.poke(memAddress +96, 32752);
	do Memory.poke(memAddress +128, -16360);
	do Memory.poke(memAddress +160, -32720);
	do Memory.poke(memAddress +192, 7200);
	do Memory.poke(memAddress +224, 7232);
	do Memory.poke(memAddress +256, 192);
	do Memory.poke(memAddress +288, 192);
	do Memory.poke(memAddress +320, 128);
	do Memory.poke(memAddress +352, 131);
	do Memory.poke(memAddress +384, 142);
	do Memory.poke(memAddress +416, 4344);
	do Memory.poke(memAddress +448, 4236);
	do Memory.poke(memAddress +480, 7879);
	do Memory.poke(memAddress +512, 3648);
	do Memory.poke(memAddress +544, 3168);
	do Memory.poke(memAddress +576, 48);
	do Memory.poke(memAddress +608, 15);
	do Memory.poke(memAddress +640, 1);
	do Memory.poke(memAddress +672, 2);
	do Memory.poke(memAddress +704, 14);
	do Memory.poke(memAddress +736, -16264);
	do Memory.poke(memAddress +768, 32704);
	do Memory.poke(memAddress +800, 4224);
	do Memory.poke(memAddress +832, 4224);
	do Memory.poke(memAddress +864, 7392);
	// column 1
	do Memory.poke(memAddress +161, 1);
	do Memory.poke(memAddress +193, 3);
	do Memory.poke(memAddress +225, 4);
	do Memory.poke(memAddress +257, 4);
	do Memory.poke(memAddress +289, 4);
	do Memory.poke(memAddress +321, 4);
	do Memory.poke(memAddress +353, 4);
	do Memory.poke(memAddress +385, 4);
	do Memory.poke(memAddress +417, 4);
	do Memory.poke(memAddress +449, 4);
	do Memory.poke(memAddress +481, 4);
	do Memory.poke(memAddress +513, 4);
	do Memory.poke(memAddress +545, 4);
	do Memory.poke(memAddress +577, 4);
	do Memory.poke(memAddress +609, 4);
	do Memory.poke(memAddress +641, 4);
	do Memory.poke(memAddress +673, 6);
	do Memory.poke(memAddress +705, 3);
	do Memory.poke(memAddress +737, 1);
	return;
}
function void babycang4(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress, 28);
	do Memory.poke(memAddress +32, 24);
	do Memory.poke(memAddress +64, 24);
	do Memory.poke(memAddress +96, 63);
	do Memory.poke(memAddress +128, 96);
	do Memory.poke(memAddress +160, 192);
	do Memory.poke(memAddress +192, 398);
	do Memory.poke(memAddress +224, 526);
	do Memory.poke(memAddress +256, 512);
	do Memory.poke(memAddress +288, 512);
	do Memory.poke(memAddress +320, 512);
	do Memory.poke(memAddress +352, 512);
	do Memory.poke(memAddress +384, 512);
	do Memory.poke(memAddress +416, 520);
	do Memory.poke(memAddress +448, 520);
	do Memory.poke(memAddress +480, 527);
	do Memory.poke(memAddress +512, 519);
	do Memory.poke(memAddress +544, 518);
	do Memory.poke(memAddress +576, 512);
	do Memory.poke(memAddress +608, 512);
	do Memory.poke(memAddress +640, 512);
	do Memory.poke(memAddress +672, 768);
	do Memory.poke(memAddress +704, 384);
	do Memory.poke(memAddress +736, 224);
	do Memory.poke(memAddress +768, 63);
	do Memory.poke(memAddress +800, 8);
	do Memory.poke(memAddress +832, 8);
	do Memory.poke(memAddress +864, 14);
	// column 1
	// column -1
	do Memory.poke(memAddress +95, -2048);
	do Memory.poke(memAddress +127, 3072);
	do Memory.poke(memAddress +159, 6144);
	do Memory.poke(memAddress +191, 4096);
	do Memory.poke(memAddress +223, 8192);
	do Memory.poke(memAddress +255, 24576);
	do Memory.poke(memAddress +287, 24576);
	do Memory.poke(memAddress +319, 16384);
	do Memory.poke(memAddress +351, 16768);
	do Memory.poke(memAddress +383, 18176);
	do Memory.poke(memAddress +415, 31744);
	do Memory.poke(memAddress +447, 17920);
	do Memory.poke(memAddress +479, 25472);
	do Memory.poke(memAddress +511, 8192);
	do Memory.poke(memAddress +543, 12288);
	do Memory.poke(memAddress +575, 6144);
	do Memory.poke(memAddress +607, 1920);
	do Memory.poke(memAddress +639, 128);
	do Memory.poke(memAddress +671, 256);
	do Memory.poke(memAddress +703, 1792);
	do Memory.poke(memAddress +735, 15360);
	do Memory.poke(memAddress +767, -8192);
	do Memory.poke(memAddress +799, 16384);
	do Memory.poke(memAddress +831, 16384);
	do Memory.poke(memAddress +863, 28672);
	return;
}
function void babycang5(int location) {
	var int memAddress; 
	let memAddress = 16384+location;
	// column 0
	do Memory.poke(memAddress +192, 0);
	do Memory.poke(memAddress +224, 1);
	do Memory.poke(memAddress +256, 1);
	do Memory.poke(memAddress +288, 1);
	do Memory.poke(memAddress +320, 1);
	do Memory.poke(memAddress +352, 1);
	do Memory.poke(memAddress +384, 1);
	do Memory.poke(memAddress +416, 1);
	do Memory.poke(memAddress +448, 1);
	do Memory.poke(memAddress +480, 1);
	do Memory.poke(memAddress +512, 1);
	do Memory.poke(memAddress +544, 1);
	do Memory.poke(memAddress +576, 1);
	do Memory.poke(memAddress +608, 1);
	do Memory.poke(memAddress +640, 1);
	do Memory.poke(memAddress +672, 1);
	do Memory.poke(memAddress +704, 0);
	// column 1
	// column -2
	do Memory.poke(memAddress +350, -16384);
	do Memory.poke(memAddress +382, ~32767);
	do Memory.poke(memAddress +478, -16384);
	do Memory.poke(memAddress +606, -16384);
	do Memory.poke(memAddress +638, 16384);
	do Memory.poke(memAddress +670, ~32767);
	do Memory.poke(memAddress +702, ~32767);
	// column -1
	do Memory.poke(memAddress -1, 3584);
	do Memory.poke(memAddress +31, 3072);
	do Memory.poke(memAddress +63, 3072);
	do Memory.poke(memAddress +95, 8188);
	do Memory.poke(memAddress +127, 12294);
	do Memory.poke(memAddress +159, 24588);
	do Memory.poke(memAddress +191, -14584);
	do Memory.poke(memAddress +223, 1808);
	do Memory.poke(memAddress +255, 48);
	do Memory.poke(memAddress +287, 48);
	do Memory.poke(memAddress +319, 32);
	do Memory.poke(memAddress +351, 32);
	do Memory.poke(memAddress +383, 35);
	do Memory.poke(memAddress +415, 1086);
	do Memory.poke(memAddress +447, 1059);
	do Memory.poke(memAddress +479, 1969);
	do Memory.poke(memAddress +511, 912);
	do Memory.poke(memAddress +543, 792);
	do Memory.poke(memAddress +575, 12);
	do Memory.poke(memAddress +607, 3);
	do Memory.poke(memAddress +671, ~32767);
	do Memory.poke(memAddress +703, -16381);
	do Memory.poke(memAddress +735, 28702);
	do Memory.poke(memAddress +767, 8176);
	do Memory.poke(memAddress +799, 1056);
	do Memory.poke(memAddress +831, 1056);
	do Memory.poke(memAddress +863, 1848);
	return;
}
function void clear(){
    do Screen.setColor (false);
    do Screen.drawRectangle (5,225,50,254);
    return;
}
function void cleartext(){
    do Screen.setColor (false);
    do Screen.drawRectangle (0,0,512,50);
    return;
}

function void clearfloor(){
    do Screen.setColor (false);
    do Screen.drawRectangle (0,225,511,254);
    return;
}

}